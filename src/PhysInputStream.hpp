////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////

#ifndef __PHYSINPUTSTREAM_HPP__
#define __PHYSINPUTSTREAM_HPP__ 1

////////////////////////////////////////////////////////////////////////////////

#include <SFML/System/InputStream.hpp>

////////////////////////////////////////////////////////////////////////////////

typedef struct PHYSFS_File PHYSFS_File;

class PhysInputStream : public sf::InputStream
{
private:
    PhysInputStream(PHYSFS_File *file);

public:
    PhysInputStream(PhysInputStream &&rhs);
    virtual ~PhysInputStream();

    void close();

    virtual sf::Int64 read(void *data, sf::Int64 size);
    virtual sf::Int64 seek(sf::Int64 position);
    virtual sf::Int64 tell();
    virtual sf::Int64 getSize();
};

////////////////////////////////////////////////////////////////////////////////

#endif // __PHYSINPUTSTREAM_HPP__

////////////////////////////////////////////////////////////////////////////////
// EOF
////////////////////////////////////////////////////////////////////////////////

