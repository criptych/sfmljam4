////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////

#ifndef __PHYSOUTPUTSTREAM_HPP__
#define __PHYSOUTPUTSTREAM_HPP__ 1

////////////////////////////////////////////////////////////////////////////////

#include <SFML/System/InputStream.hpp>

////////////////////////////////////////////////////////////////////////////////

typedef struct PHYSFS_File PHYSFS_File;

class PhysOutputStream //: public sf::OutputStream
{
private:
    PhysOutputStream(PHYSFS_File *file);

    friend class PhysicsFS;

    PHYSFS_File *m_file;

public:
    PhysOutputStream(PhysOutputStream &&rhs);
    virtual ~PhysOutputStream();

    void close();

    virtual sf::Int64 write(const void *data, sf::Int64 size);
    virtual sf::Int64 seek(sf::Int64 position);
    virtual sf::Int64 tell();
    virtual sf::Int64 getSize();
};

////////////////////////////////////////////////////////////////////////////////

#endif // __PHYSOUTPUTSTREAM_HPP__

////////////////////////////////////////////////////////////////////////////////
// EOF
////////////////////////////////////////////////////////////////////////////////

