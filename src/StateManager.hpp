////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////

#ifndef __STATEMANAGER_HPP__
#define __STATEMANAGER_HPP__ 1

////////////////////////////////////////////////////////////////////////////////

#include "Resource.hpp"

#include <SFML/Graphics.hpp>

////////////////////////////////////////////////////////////////////////////////

class State;

class StateManager
{
public:
    StateManager();
    ~StateManager();

    void pushState(const Handle<State> &state);
    Handle<State> popState();
    void popState(const Handle<State> &state);
    Handle<State> setState(const Handle<State> &state);
    Handle<State> getState() const;

    bool handleEvent(const sf::Event &event);
    void update(sf::Time delta);
    void draw(sf::RenderTarget &target, sf::RenderStates states) const;

private:
    void updateTops();

    typedef std::vector< Handle<State> > StateList;

    StateList m_states;
    unsigned int m_topModal;
    unsigned int m_topOpaque;
};

////////////////////////////////////////////////////////////////////////////////

#endif // __STATEMANAGER_HPP__

////////////////////////////////////////////////////////////////////////////////
// EOF
////////////////////////////////////////////////////////////////////////////////

